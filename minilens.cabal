name:     minilens
version:  0.1.0.1
synopsis: A minimalistic lens library, providing only the simplest, most basic lens functionality.
description:         
    Lenses satisfy the properties of the Category type class, and are used
    to inspect and update individual elements of a data structue in a type-safe
    way. This library provides the simplest possible data types satisfying
    these properties.

    "minilens" type aims to provide a very simple improvement on Haskell's
    record syntax: the idea of composable record accessors called 'Lens'es.
    
    As of yet, there are no fancy Template Haskell APIs for generating lenses
    programmatically; you are expected to write your lenses by hand. Some handy
    helper functions are provided to help you do this.

    This library was originally part of the Dao package, but has been branched
    into it's own package in the hopes that it will be useful in a wider
    variety of projects.

homepage:            https://github.com/RaminHAL9001/mini-lens
license:             GPL-3
license-file:        LICENSE
author:              Ramin Honary
maintainer:          ramin.honary@gmail.com
copyright:           2008-2015 Ramin Honary
category:            Data, Lens
build-type:          Simple
cabal-version:       >=1.10

library

  exposed-modules:     
    Data.Lens.Minimal

  default-extensions:
    MultiParamTypeClasses
    FlexibleInstances
    FlexibleContexts

  build-depends:
    array        >=0.5.0.0 && <=0.5.0.0,
    base         >=4.7     && <4.8,
    containers   >=0.5.5.0 && <=0.5.5.1,
    mtl          >=2.2.0   && <=2.2.1,
    transformers >=0.3.0.0 && <=0.4.3.0

  GHC-options: -Wall
    -fno-warn-name-shadowing
    -fno-warn-unused-do-bind

  hs-source-dirs:      src

  default-language:    Haskell2010

